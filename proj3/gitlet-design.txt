Gitlet Design Document
----------------------

Classes and Data Structures
---------------------------
** Blob **
Has:
String name - the name of the file
String word - the  contents
String hash - the hash string

** Commit **
contents - a HashMap of all the contents

** Gitlet **
ArrayList untracked - files that are untracked for the current round of stage
Set tracked - tracked files for this round of commit
ArrayList branches - all the branches that we are keeping track of
ArrayList commits - the hash values of all the commits
HashMap branchHeads - the heads of all the branches (redundant to have branches)
HashMap remoterepos - all the remoterepo names and the locations




Algorithms
----------
** Blob **
getName() - gets the name of the file
getSContents() - gets the name as a string
getBContents() - gets the file as byte array
getHash() - gets the hash function

** Commit **
There are three different ways of initializing the
commit class, either inital commit, merge commit or
a regular commit
hashval() - generates and retrieves the hash value
gethash() - gets the hash value
getbranch() - gets the value of the branch
getMessage() - gets the message associated with the message
getTime() gets the time of the message
getParent() - gets the parent of the commit
getSParent() - gets the second parent (if any)
getBlobs() gets all the blobs of the commit (hash values)
getContents() gets the entire thing

** Gitlet **
run - runs the various functions that Gitlet possesses
firstgroupfunc - a hlper function to run that contains a smaller subset of commands
secongroupfunc - a helper functon to run that contains a smaller subset of commands
thirdgroupfunc - a helper function to run that contains a smaller subset of commands
init - this initializes the gitlet directory and is used by firstgroupfunc
add - this stages a file to the staging area, and is helped along with the
stage object under the name staged.
remove - removes the file from the staging area and even remove it from the directory
if it was tracked
commit - creates a commit object from the variables passed, staging area and the tracked array
list and then adds this to the relevant data structures and such
log - displays the ancestry of the current commit essentially
globall - called by secondgroupfunc and shows all the commits
find - will find a commit based on a message
status - will print out the entire status including the modifications, the names, etc


Persistence
-----------
